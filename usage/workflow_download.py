from jmcomic import *
from jmcomic.cl import JmcomicUI

# 下方填入你要下载的本子的id，一行一个，每行的首尾可以有空白字符
jm_albums = '''
229730
198027
258344
467180
251258
144132
224412
239676
205322
244658
269316
243216
330459
424736
346821
209640
224406
279371
442234
504833
339981
225346
285588
427260
147910
150232
305256
509898
261258
295664
431296
494180
506968
527372
62119
306896
382552
53358
205826
226390
301254
269341
447634
448014
225671
279430
217284
233716
51499
272980
247045
81417
609401
315087
226784
527941
139078
647784
640520
331731
456386
467116
206056
178543
600130
44230
253895
346610
533198
251137
246118
277088
51350
208767
380757
173546
188935
250615
247046
502930
229730
198027
258344
467180
251258
144132
224412
239676
205322
244658
269316
243216
330459
424736
346821
209640
224406
279371
442234
504833
339981
225346
285588
427260
147910
150232
305256
509898
261258
295664
431296
494180
506968
527372
62119
306896
382552
53358
205826
226390
301254
269341
447634
448014
225671
279430
217284
233716
51499
272980
247045
81417
609401
315087
226784
527941
139078
647784
640520
331731
456386
467116
206056
178543
600130
44230
253895
346610
533198
251137
246118
277088
51350
208767
380757
173546
188935
250615
247046
502930
525223
642262
378244
427136
178390
425295
187420
620808
196442
320567
53943
265477
438262
608131
241589
527944
181847
290085
252830
332045
620232
270555
219248
614357
180840
227227
229859
587954
375641
1017177
232696
10497
61747
1036720
222663
257877
547894
443800
461640
449581
631353
198024
247039
235575
392580
251669
559450
360978
587952
1042327
243594
148753
320771
474165
229441
283484
245937
205448
77106
216785
51721
1012961
439742
515394
1024197
1063837
306433
527937
1036715
315089
572776
510049
505695
295852
193335
272201
254914
243908
596850
402688
346609
378406
533200
253063
198023
12633
521710
568786
150590
450234
24411
65969
1090678
362126
508113
189238
1054196
1032525
524827
65915
200838
291175
1029839
248552
1030636
558026
645836
450233
1055655
347037
203737
212908
247293
239642
522480
215831
189620
1070765
62951
255006
179160
15778
175113
178384
541818
358409
231572
195027
515322
384427
179818
18558
626334
141103
137161
396288
527938
123100
534
527945
524984
184
208106
347039
619258
3019
517910
1097349
639550
151796
218527
494691
182479
147364
181921
30825
225040
11853
432040
283485
297109
179138
485731
498699
572777
25190
240170
524497
65999
50949
485459
247044
8976
1052257
475283
248337
465510
637105
198130
178367
137622
209185
59572
527930
149996
1061020
1047501
326310
231452
419684
368498
650132
57667
523183
248474
355281
298258
474666
51797
1087865
300572
179132
1090654
1058413
122507
65810
343237
272200
514397
196581
50802
188641
527948
583875
18939
515772
194804
283486
105643
103874
238928
2675
226909
548805
1101277
50514
4504
495943
295686
360980
1684
317088
27555
1036718
291180
273469
470584
337227
42465
1094608
121019
526957
285789
50986
299557
119290
179453
526962
355296
1099445
1040799
16371
1026839
522416
50875
258079
282516
2812
58727
54023
1018213
243914
151022
523529
554083
461629
250723
527934
24029
554738
248551
297821
94379
34377
51914
625233
222863
525861
4239
425350
517511
1101731
213157
16517
1098214
514841
475591
398575
305445
138039
63274
1101042
51321
314934
57227
1018890
219240
2717
512105
24776
1086818
2939
326909
361790
60934
11033
429539
47261
40421
218377
65838
250056
590466
137583
520738
170578
53374
57588
136172
1017662
62162
518355
11281
1018405
66196
533188
16073
257671
223258
34451
47748
105245
65702
527936
1018407
50932
253862
533008
249826
50310
258037
263238
492029
526361
151918
324293
190708
6447
299549
12388
44905
54373
533558
260022
15288
1019260
254744
135707
546164
600586
47564
190746
152633
256939
105540
8059
52389
28930
52456
62431
4028
98820
8470
105645
41716
113467
62436
61858
122894
435889
59805
50540
42621
41297
44532
51705
46862
53503
558037
71923
554086
884
138252
5440
49497
50896
46858
47554
43753
92200
60254
139114
1087912
213969
1018891
148842
15022
204046
77848
431448
50522
104080
60557
15103
477676
71911
276515
849
73152
533557
58634
98967
54290
53293
782
64274
26592
26387
784
511143
52526
145908
62700
61236
2578
533555
8429
65952
810
494254
2622
65626
48585
523318
180108
15779
104997
66667
17594
12451
66224
33595
66049
533556
148844
511126
1253
49640
1872
40307
488130
11835
562918
36958
61312
37446
58310
8362
54481
148229
783
33425
37834
50923
10498
65715
78632
26494
53775
205832
35394
32850
2892
57377
254555
53286
87542
121870
65806
511110
62332
51538
106000
267135
22728
262928
51062
531141
105895
10274
23668
113742
49234
58729
15998
296300
65768
66073
105589
511109
65704
71857
143613
35370
30553
2710
60325
65730
48461
8854
46870
346326
189799
225797
71820
55198
49087
67109
71884
6446
129314
296822
65681
19424
32915
334840
73207
150446
4503
102494
57984
70202
219196
271468
71855
58167
62270
39120
11715
65721
4293
145624
381438
65714
17082
12293
225872
278037
1570

'''

# 单独下载章节
jm_photos = '''



'''


def env(name, default, trim=('[]', '""', "''")):
    import os
    value = os.getenv(name, None)
    if value is None or value == '':
        return default

    for pair in trim:
        if value.startswith(pair[0]) and value.endswith(pair[1]):
            value = value[1:-1]

    return value


def get_id_set(env_name, given):
    aid_set = set()
    for text in [
        given,
        (env(env_name, '')).replace('-', '\n'),
    ]:
        aid_set.update(str_to_set(text))

    return aid_set


def main():
    album_id_set = get_id_set('JM_ALBUM_IDS', jm_albums)
    photo_id_set = get_id_set('JM_PHOTO_IDS', jm_photos)

    helper = JmcomicUI()
    helper.album_id_list = list(album_id_set)
    helper.photo_id_list = list(photo_id_set)

    option = get_option()
    helper.run(option)
    option.call_all_plugin('after_download')


def get_option():
    # 读取 option 配置文件
    option = create_option(os.path.abspath(os.path.join(__file__, '../../assets/option/option_workflow_download.yml')))

    # 支持工作流覆盖配置文件的配置
    cover_option_config(option)

    # 把请求错误的html下载到文件，方便GitHub Actions下载查看日志
    log_before_raise()

    return option


def cover_option_config(option: JmOption):
    dir_rule = env('DIR_RULE', None)
    if dir_rule is not None:
        the_old = option.dir_rule
        the_new = DirRule(dir_rule, base_dir=the_old.base_dir)
        option.dir_rule = the_new

    impl = env('CLIENT_IMPL', None)
    if impl is not None:
        option.client.impl = impl

    suffix = env('IMAGE_SUFFIX', None)
    if suffix is not None:
        option.download.image.suffix = fix_suffix(suffix)


def log_before_raise():
    jm_download_dir = env('JM_DOWNLOAD_DIR', workspace())
    mkdir_if_not_exists(jm_download_dir)

    def decide_filepath(e):
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)

        if resp is None:
            suffix = str(time_stamp())
        else:
            suffix = resp.url

        name = '-'.join(
            fix_windir_name(it)
            for it in [
                e.description,
                current_thread().name,
                suffix
            ]
        )

        path = f'{jm_download_dir}/【出错了】{name}.log'
        return path

    def exception_listener(e: JmcomicException):
        """
        异常监听器，实现了在 GitHub Actions 下，把请求错误的信息下载到文件，方便调试和通知使用者
        """
        # 决定要写入的文件路径
        path = decide_filepath(e)

        # 准备内容
        content = [
            str(type(e)),
            e.msg,
        ]
        for k, v in e.context.items():
            content.append(f'{k}: {v}')

        # resp.text
        resp = e.context.get(ExceptionTool.CONTEXT_KEY_RESP, None)
        if resp:
            content.append(f'响应文本: {resp.text}')

        # 写文件
        write_text(path, '\n'.join(content))

    JmModuleConfig.register_exception_listener(JmcomicException, exception_listener)


if __name__ == '__main__':
    main()
